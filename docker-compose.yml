services:
  poseCraft_FE:
    container_name: posecraft_fe-container
    image: posecraft_fe-image
    build:
      context: ./posecraft
    ports:
      - "8000:3000"
    networks:
      - app_nw
    env_file:
      - ./.env
  poseCraft_BE:
    container_name: posecraft_be-container
    image: posecraft_be-image
    build:
      context: ./server/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - app_nw
    env_file:
      - ./.env
    depends_on:
      - poseCraft_worker
  poseCraft_worker:
    container_name: posecraft_worker-container
    image: posecraft_worker-image
    build:
      context: ./server/
      dockerfile: worker.Dockerfile
    networks:
      - app_nw
    env_file:
      - ./.env
    depends_on:
      - redis
      - mongo-db
  redis:
    image: redis
    container_name: redis-host
    env_file:
      - ./.env
    networks:
      - app_nw
  mongo-db:
    container_name: mongo
    image: mongo
    hostname: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
      - app_nw
    volumes:
      - 'mongo-data:/data/db'
    env_file:
      - ./.env

networks:
  app_nw:


volumes:
  mongo-data:
    driver: local
    name: mongo-data
